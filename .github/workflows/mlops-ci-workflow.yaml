name: MLOps CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
      - main
jobs:
  workflow:
    runs-on: ubuntu-latest
    name: Build and Test
    # Define MLFlow as a service container. Actions will manage its lifecycle,
    # ensuring it's running and networked before the steps need it.

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Checkout Repository
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # python --version
          python-version: '3.11.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # MLOps Specific steps
      - name: Data Validation
        run: |
          python src/data/run_processing.py \
            --output-file data/processed/cleaned_house_data2.csv \
            --input-file data/raw/house_data.csv

      - name: Feature Engineering
        run: |
          
          python src/features/engineer.py \
            --input data/processed/cleaned_house_data2.csv \
            --output data/processed/featured_house_data2.csv \
            --preprocessor models/preprocessor.pkl

      - name: Start MLflow Service
        run: |
          docker pull ghcr.io/mlflow/mlflow:latest 
          docker run \
            -d --name mlflow_server -p 5555:5000 \
            ghcr.io/mlflow/mlflow:latest \
            mlflow server \
              --host 0.0.0.0 \
              --backend-store-uri sqlite:///mlflow.db \
              --default-artifact-root /tmp/mlruns

      - name: Wait for MLflow service to be ready
        run: |
          # This step prevents the training job from starting before the tracking server is available.
          echo "Waiting for MLflow to be ready..."
          until $(curl --output /dev/null --silent --head --fail http://localhost:5555); do
            printf '.'
            sleep 5
          done
          echo "MLflow is up and running!"          

      - name: Model Training
        run: |
          python src/models/train_model.py \
          --config configs/model_config.yaml \
          --data data/processed/featured_house_data2.csv \
          --models-dir models \
          --mlflow-tracking-uri http://localhost:5555

      - name: Stop MLflow Service
        run: |
          docker stop mlflow_server
          docker rm mlflow_server
          docker rmi ghcr.io/mlflow/mlflow:latest
          

          
        


